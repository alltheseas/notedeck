# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
rust-version = "1.72"
name = "ehttp"
version = "0.5.0"
authors = ["Emil Ernerfeldt <emil.ernerfeldt@gmail.com>"]
include = [
    "../LICENSE-APACHE",
    "../LICENSE-MIT",
    "**/*.rs",
    "Cargo.toml",
]
description = "Minimal HTTP client for both native and WASM"
homepage = "https://github.com/emilk/ehttp"
readme = "README.md"
keywords = [
    "http",
    "wasm",
    "native",
    "web",
]
categories = [
    "network-programming",
    "wasm",
    "web-programming",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/emilk/ehttp"

[package.metadata.docs.rs]
all-features = true

[lib]

[dependencies.document-features]
version = "0.2"

[dependencies.mime]
version = "0.3"
optional = true

[dependencies.mime_guess]
version = "2.0"
optional = true

[dependencies.rand]
version = "0.8.5"
optional = true

[dependencies.serde]
version = "1.0"
optional = true

[dependencies.serde_json]
version = "1.0"
optional = true

[features]
default = []
json = [
    "dep:serde",
    "dep:serde_json",
]
multipart = [
    "dep:getrandom",
    "dep:mime",
    "dep:mime_guess",
    "dep:rand",
]
native-async = ["async-channel"]
streaming = [
    "dep:wasm-streams",
    "dep:futures-util",
]

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.async-channel]
version = "2.0"
optional = true

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.ureq]
version = "2.0"

[target."cfg(target_arch = \"wasm32\")".dependencies.futures-util]
version = "0.3"
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.getrandom]
version = "0.2.10"
features = ["js"]
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.js-sys]
version = "0.3"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen]
version = "0.2.89"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-bindgen-futures]
version = "0.4"

[target."cfg(target_arch = \"wasm32\")".dependencies.wasm-streams]
version = "0.4"
optional = true

[target."cfg(target_arch = \"wasm32\")".dependencies.web-sys]
version = "0.3.52"
features = [
    "AbortSignal",
    "console",
    "Headers",
    "ReadableStream",
    "Request",
    "RequestInit",
    "RequestMode",
    "Response",
    "Window",
]
