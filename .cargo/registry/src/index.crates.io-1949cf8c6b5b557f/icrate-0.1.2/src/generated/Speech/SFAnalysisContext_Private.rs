//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Foundation::*;
use crate::Speech::*;

extern_static!(_SFAnalysisContextTagLeftContext: &'static NSString);

extern_static!(_SFAnalysisContextTagRightContext: &'static NSString);

extern_static!(_SFAnalysisContextTagSelectedText: &'static NSString);

extern_static!(_SFAnalysisContextTagGeoLMRegionID: &'static NSString);

extern_static!(_SFAnalysisContextTagContextualNamedEntities: &'static NSString);

extern_static!(SFAnalysisContextTagLeftContext: &'static NSString);

extern_static!(SFAnalysisContextTagRightContext: &'static NSString);

extern_static!(SFAnalysisContextTagSelectedText: &'static NSString);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Speech__SFContextualNamedEntity")]
    pub struct _SFContextualNamedEntity;

    #[cfg(feature = "Speech__SFContextualNamedEntity")]
    unsafe impl ClassType for _SFContextualNamedEntity {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Speech__SFContextualNamedEntity")]
unsafe impl Send for _SFContextualNamedEntity {}

#[cfg(feature = "Speech__SFContextualNamedEntity")]
unsafe impl Sync for _SFContextualNamedEntity {}

#[cfg(feature = "Speech__SFContextualNamedEntity")]
unsafe impl NSObjectProtocol for _SFContextualNamedEntity {}

extern_methods!(
    #[cfg(feature = "Speech__SFContextualNamedEntity")]
    unsafe impl _SFContextualNamedEntity {
        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithPersonalizationPortraitName:score:category:language:)]
        pub unsafe fn initWithPersonalizationPortraitName_score_category_language(
            this: Allocated<Self>,
            name: &NSString,
            score: c_double,
            category: NSUInteger,
            language: &NSString,
        ) -> Id<Self>;

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Init initWithPeopleSuggesterRecipientDisplayName:)]
        pub unsafe fn initWithPeopleSuggesterRecipientDisplayName(
            this: Allocated<Self>,
            display_name: &NSString,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "Speech__SFContextualNamedEntity")]
    unsafe impl _SFContextualNamedEntity {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "Speech__SFAnalysisContext")]
    pub struct _SFAnalysisContext;

    #[cfg(feature = "Speech__SFAnalysisContext")]
    unsafe impl ClassType for _SFAnalysisContext {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "Speech__SFAnalysisContext")]
unsafe impl NSObjectProtocol for _SFAnalysisContext {}

extern_methods!(
    #[cfg(feature = "Speech__SFAnalysisContext")]
    unsafe impl _SFAnalysisContext {
        #[cfg(feature = "Speech_AnalysisContext")]
        #[method_id(@__retain_semantics Init initWithAnalysisContext:)]
        pub unsafe fn initWithAnalysisContext(
            this: Allocated<Self>,
            analysis_context: &AnalysisContext,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method_id(@__retain_semantics Other contextualStringsForKey:)]
        pub unsafe fn contextualStringsForKey(
            &self,
            key: &NSString,
        ) -> Option<Id<NSArray<NSString>>>;

        #[cfg(all(feature = "Foundation_NSArray", feature = "Foundation_NSString"))]
        #[method(setContextualStrings:forKey:)]
        pub unsafe fn setContextualStrings_forKey(
            &self,
            contextual_strings: Option<&NSArray<NSString>>,
            key: &NSString,
        );

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other userDataForKey:)]
        pub unsafe fn userDataForKey(&self, key: &NSString) -> Option<Id<AnyObject>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setUserData:forKey:)]
        pub unsafe fn setUserData_forKey(&self, user_data: Option<&AnyObject>, key: &NSString);

        #[cfg(feature = "Foundation_NSString")]
        #[method_id(@__retain_semantics Other geoLMRegionID)]
        pub unsafe fn geoLMRegionID(&self) -> Option<Id<NSString>>;

        #[cfg(feature = "Foundation_NSString")]
        #[method(setGeoLMRegionID:)]
        pub unsafe fn setGeoLMRegionID(&self, geo_lm_region_id: Option<&NSString>);

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Speech__SFContextualNamedEntity"
        ))]
        #[method_id(@__retain_semantics Other contextualNamedEntities)]
        pub unsafe fn contextualNamedEntities(
            &self,
        ) -> Option<Id<NSArray<_SFContextualNamedEntity>>>;

        #[cfg(all(
            feature = "Foundation_NSArray",
            feature = "Speech__SFContextualNamedEntity"
        ))]
        #[method(setContextualNamedEntities:)]
        pub unsafe fn setContextualNamedEntities(
            &self,
            contextual_named_entities: Option<&NSArray<_SFContextualNamedEntity>>,
        );
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    #[cfg(feature = "Speech__SFAnalysisContext")]
    unsafe impl _SFAnalysisContext {
        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
