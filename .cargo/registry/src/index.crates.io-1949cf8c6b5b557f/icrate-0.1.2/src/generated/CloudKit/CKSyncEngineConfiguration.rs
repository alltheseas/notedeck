//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::CloudKit::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CloudKit_CKSyncEngineConfiguration")]
    pub struct CKSyncEngineConfiguration;

    #[cfg(feature = "CloudKit_CKSyncEngineConfiguration")]
    unsafe impl ClassType for CKSyncEngineConfiguration {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CloudKit_CKSyncEngineConfiguration")]
unsafe impl Send for CKSyncEngineConfiguration {}

#[cfg(feature = "CloudKit_CKSyncEngineConfiguration")]
unsafe impl Sync for CKSyncEngineConfiguration {}

#[cfg(feature = "CloudKit_CKSyncEngineConfiguration")]
unsafe impl NSObjectProtocol for CKSyncEngineConfiguration {}

extern_methods!(
    #[cfg(feature = "CloudKit_CKSyncEngineConfiguration")]
    unsafe impl CKSyncEngineConfiguration {
        #[cfg(all(
            feature = "CloudKit_CKDatabase",
            feature = "CloudKit_CKSyncEngineStateSerialization"
        ))]
        #[method_id(@__retain_semantics Init initWithDatabase:stateSerialization:delegate:)]
        pub unsafe fn initWithDatabase_stateSerialization_delegate(
            this: Allocated<Self>,
            database: &CKDatabase,
            state_serialization: Option<&CKSyncEngineStateSerialization>,
            delegate: &ProtocolObject<dyn CKSyncEngineDelegate>,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[cfg(feature = "CloudKit_CKDatabase")]
        #[method_id(@__retain_semantics Other database)]
        pub unsafe fn database(&self) -> Id<CKDatabase>;

        #[cfg(feature = "CloudKit_CKDatabase")]
        #[method(setDatabase:)]
        pub unsafe fn setDatabase(&self, database: &CKDatabase);

        #[cfg(feature = "CloudKit_CKSyncEngineStateSerialization")]
        #[method_id(@__retain_semantics Other stateSerialization)]
        pub unsafe fn stateSerialization(&self) -> Option<Id<CKSyncEngineStateSerialization>>;

        #[cfg(feature = "CloudKit_CKSyncEngineStateSerialization")]
        #[method(setStateSerialization:)]
        pub unsafe fn setStateSerialization(
            &self,
            state_serialization: Option<&CKSyncEngineStateSerialization>,
        );

        #[method_id(@__retain_semantics Other delegate)]
        pub unsafe fn delegate(&self) -> Option<Id<ProtocolObject<dyn CKSyncEngineDelegate>>>;

        #[method(setDelegate:)]
        pub unsafe fn setDelegate(
            &self,
            delegate: Option<&ProtocolObject<dyn CKSyncEngineDelegate>>,
        );

        #[method(automaticallySync)]
        pub unsafe fn automaticallySync(&self) -> bool;

        #[method(setAutomaticallySync:)]
        pub unsafe fn setAutomaticallySync(&self, automatically_sync: bool);

        #[method_id(@__retain_semantics Other subscriptionID)]
        pub unsafe fn subscriptionID(&self) -> Option<Id<CKSubscriptionID>>;

        #[method(setSubscriptionID:)]
        pub unsafe fn setSubscriptionID(&self, subscription_id: Option<&CKSubscriptionID>);
    }
);
