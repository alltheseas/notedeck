// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

//! # Bindings to the `AuthenticationServices` framework

#[path = "../../fixes/AuthenticationServices/mod.rs"]
mod fixes;
pub use self::fixes::*;

#[cfg_attr(
    feature = "apple",
    link(name = "AuthenticationServices", kind = "framework")
)]
extern "C" {}

#[path = "ASAccountAuthenticationModificationController.rs"]
mod __ASAccountAuthenticationModificationController;
#[path = "ASAccountAuthenticationModificationExtensionContext.rs"]
mod __ASAccountAuthenticationModificationExtensionContext;
#[path = "ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest.rs"]
mod __ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest;
#[path = "ASAccountAuthenticationModificationRequest.rs"]
mod __ASAccountAuthenticationModificationRequest;
#[path = "ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest.rs"]
mod __ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest;
#[path = "ASAccountAuthenticationModificationViewController.rs"]
mod __ASAccountAuthenticationModificationViewController;
#[path = "ASAuthorization.rs"]
mod __ASAuthorization;
#[path = "ASAuthorizationAppleIDButton.rs"]
mod __ASAuthorizationAppleIDButton;
#[path = "ASAuthorizationAppleIDCredential.rs"]
mod __ASAuthorizationAppleIDCredential;
#[path = "ASAuthorizationAppleIDProvider.rs"]
mod __ASAuthorizationAppleIDProvider;
#[path = "ASAuthorizationAppleIDRequest.rs"]
mod __ASAuthorizationAppleIDRequest;
#[path = "ASAuthorizationController.rs"]
mod __ASAuthorizationController;
#[path = "ASAuthorizationCredential.rs"]
mod __ASAuthorizationCredential;
#[path = "ASAuthorizationCustomMethod.rs"]
mod __ASAuthorizationCustomMethod;
#[path = "ASAuthorizationError.rs"]
mod __ASAuthorizationError;
#[path = "ASAuthorizationOpenIDRequest.rs"]
mod __ASAuthorizationOpenIDRequest;
#[path = "ASAuthorizationPasswordProvider.rs"]
mod __ASAuthorizationPasswordProvider;
#[path = "ASAuthorizationPasswordRequest.rs"]
mod __ASAuthorizationPasswordRequest;
#[path = "ASAuthorizationPlatformPublicKeyCredentialAssertion.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialAssertion;
#[path = "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialAssertionRequest;
#[path = "ASAuthorizationPlatformPublicKeyCredentialDescriptor.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialDescriptor;
#[path = "ASAuthorizationPlatformPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialProvider;
#[path = "ASAuthorizationPlatformPublicKeyCredentialRegistration.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialRegistration;
#[path = "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest;
#[path = "ASAuthorizationProvider.rs"]
mod __ASAuthorizationProvider;
#[path = "ASAuthorizationProviderExtensionAuthorizationRequest.rs"]
mod __ASAuthorizationProviderExtensionAuthorizationRequest;
#[path = "ASAuthorizationProviderExtensionAuthorizationResult.rs"]
mod __ASAuthorizationProviderExtensionAuthorizationResult;
#[path = "ASAuthorizationProviderExtensionLoginConfiguration.rs"]
mod __ASAuthorizationProviderExtensionLoginConfiguration;
#[path = "ASAuthorizationProviderExtensionLoginManager.rs"]
mod __ASAuthorizationProviderExtensionLoginManager;
#[path = "ASAuthorizationProviderExtensionRegistrationHandler.rs"]
mod __ASAuthorizationProviderExtensionRegistrationHandler;
#[path = "ASAuthorizationProviderExtensionUserLoginConfiguration.rs"]
mod __ASAuthorizationProviderExtensionUserLoginConfiguration;
#[path = "ASAuthorizationPublicKeyCredentialAssertion.rs"]
mod __ASAuthorizationPublicKeyCredentialAssertion;
#[path = "ASAuthorizationPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationPublicKeyCredentialAssertionRequest;
#[path = "ASAuthorizationPublicKeyCredentialConstants.rs"]
mod __ASAuthorizationPublicKeyCredentialConstants;
#[path = "ASAuthorizationPublicKeyCredentialDescriptor.rs"]
mod __ASAuthorizationPublicKeyCredentialDescriptor;
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput;
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput;
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput;
#[path = "ASAuthorizationPublicKeyCredentialParameters.rs"]
mod __ASAuthorizationPublicKeyCredentialParameters;
#[path = "ASAuthorizationPublicKeyCredentialRegistration.rs"]
mod __ASAuthorizationPublicKeyCredentialRegistration;
#[path = "ASAuthorizationPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationPublicKeyCredentialRegistrationRequest;
#[path = "ASAuthorizationRequest.rs"]
mod __ASAuthorizationRequest;
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertion.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialAssertion;
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest;
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialProvider;
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistration.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialRegistration;
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest;
#[path = "ASAuthorizationSingleSignOnCredential.rs"]
mod __ASAuthorizationSingleSignOnCredential;
#[path = "ASAuthorizationSingleSignOnProvider.rs"]
mod __ASAuthorizationSingleSignOnProvider;
#[path = "ASAuthorizationSingleSignOnRequest.rs"]
mod __ASAuthorizationSingleSignOnRequest;
#[path = "ASAuthorizationWebBrowserExternallyAuthenticatableRequest.rs"]
mod __ASAuthorizationWebBrowserExternallyAuthenticatableRequest;
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredential.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredential;
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest;
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider;
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest;
#[path = "ASAuthorizationWebBrowserPublicKeyCredentialManager.rs"]
mod __ASAuthorizationWebBrowserPublicKeyCredentialManager;
#[path = "ASCOSEConstants.rs"]
mod __ASCOSEConstants;
#[path = "ASCredentialIdentity.rs"]
mod __ASCredentialIdentity;
#[path = "ASCredentialIdentityStore.rs"]
mod __ASCredentialIdentityStore;
#[path = "ASCredentialIdentityStoreState.rs"]
mod __ASCredentialIdentityStoreState;
#[path = "ASCredentialProviderExtensionContext.rs"]
mod __ASCredentialProviderExtensionContext;
#[path = "ASCredentialProviderViewController.rs"]
mod __ASCredentialProviderViewController;
#[path = "ASCredentialRequest.rs"]
mod __ASCredentialRequest;
#[path = "ASCredentialServiceIdentifier.rs"]
mod __ASCredentialServiceIdentifier;
#[path = "ASExtensionErrors.rs"]
mod __ASExtensionErrors;
#[path = "ASFoundation.rs"]
mod __ASFoundation;
#[path = "ASPasskeyAssertionCredential.rs"]
mod __ASPasskeyAssertionCredential;
#[path = "ASPasskeyCredentialIdentity.rs"]
mod __ASPasskeyCredentialIdentity;
#[path = "ASPasskeyCredentialRequest.rs"]
mod __ASPasskeyCredentialRequest;
#[path = "ASPasskeyCredentialRequestParameters.rs"]
mod __ASPasskeyCredentialRequestParameters;
#[path = "ASPasskeyRegistrationCredential.rs"]
mod __ASPasskeyRegistrationCredential;
#[path = "ASPasswordCredential.rs"]
mod __ASPasswordCredential;
#[path = "ASPasswordCredentialIdentity.rs"]
mod __ASPasswordCredentialIdentity;
#[path = "ASPasswordCredentialRequest.rs"]
mod __ASPasswordCredentialRequest;
#[path = "ASPublicKeyCredential.rs"]
mod __ASPublicKeyCredential;
#[path = "ASPublicKeyCredentialClientData.rs"]
mod __ASPublicKeyCredentialClientData;
#[path = "ASSettingsHelper.rs"]
mod __ASSettingsHelper;
#[path = "ASWebAuthenticationSession.rs"]
mod __ASWebAuthenticationSession;
#[path = "ASWebAuthenticationSessionRequest.rs"]
mod __ASWebAuthenticationSessionRequest;
#[path = "ASWebAuthenticationSessionWebBrowserSessionHandling.rs"]
mod __ASWebAuthenticationSessionWebBrowserSessionHandling;
#[path = "ASWebAuthenticationSessionWebBrowserSessionManager.rs"]
mod __ASWebAuthenticationSessionWebBrowserSessionManager;

#[cfg(feature = "AuthenticationServices_ASAccountAuthenticationModificationController")]
pub use self::__ASAccountAuthenticationModificationController::ASAccountAuthenticationModificationController;
pub use self::__ASAccountAuthenticationModificationController::ASAccountAuthenticationModificationControllerDelegate;
pub use self::__ASAccountAuthenticationModificationController::ASAccountAuthenticationModificationControllerPresentationContextProviding;
#[cfg(feature = "AuthenticationServices_ASAccountAuthenticationModificationExtensionContext")]
pub use self::__ASAccountAuthenticationModificationExtensionContext::ASAccountAuthenticationModificationExtensionContext;
#[cfg(
    feature = "AuthenticationServices_ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest"
)]
pub use self::__ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest::ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest;
#[cfg(feature = "AuthenticationServices_ASAccountAuthenticationModificationRequest")]
pub use self::__ASAccountAuthenticationModificationRequest::ASAccountAuthenticationModificationRequest;
#[cfg(
    feature = "AuthenticationServices_ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest"
)]
pub use self::__ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest::ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorization")]
pub use self::__ASAuthorization::ASAuthorization;
pub use self::__ASAuthorization::ASAuthorizationScope;
pub use self::__ASAuthorization::ASAuthorizationScopeEmail;
pub use self::__ASAuthorization::ASAuthorizationScopeFullName;
pub use self::__ASAuthorizationAppleIDButton::ASAuthorizationAppleIDButtonStyle;
pub use self::__ASAuthorizationAppleIDButton::ASAuthorizationAppleIDButtonType;
pub use self::__ASAuthorizationAppleIDButton::{
    ASAuthorizationAppleIDButtonStyleBlack, ASAuthorizationAppleIDButtonStyleWhite,
    ASAuthorizationAppleIDButtonStyleWhiteOutline,
};
pub use self::__ASAuthorizationAppleIDButton::{
    ASAuthorizationAppleIDButtonTypeContinue, ASAuthorizationAppleIDButtonTypeDefault,
    ASAuthorizationAppleIDButtonTypeSignIn, ASAuthorizationAppleIDButtonTypeSignUp,
};
#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDCredential")]
pub use self::__ASAuthorizationAppleIDCredential::ASAuthorizationAppleIDCredential;
pub use self::__ASAuthorizationAppleIDCredential::ASUserDetectionStatus;
pub use self::__ASAuthorizationAppleIDCredential::{
    ASUserDetectionStatusLikelyReal, ASUserDetectionStatusUnknown, ASUserDetectionStatusUnsupported,
};
#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDProvider")]
pub use self::__ASAuthorizationAppleIDProvider::ASAuthorizationAppleIDProvider;
pub use self::__ASAuthorizationAppleIDProvider::ASAuthorizationAppleIDProviderCredentialRevokedNotification;
pub use self::__ASAuthorizationAppleIDProvider::ASAuthorizationAppleIDProviderCredentialState;
pub use self::__ASAuthorizationAppleIDProvider::{
    ASAuthorizationAppleIDProviderCredentialAuthorized,
    ASAuthorizationAppleIDProviderCredentialNotFound,
    ASAuthorizationAppleIDProviderCredentialRevoked,
    ASAuthorizationAppleIDProviderCredentialTransferred,
};
#[cfg(feature = "AuthenticationServices_ASAuthorizationAppleIDRequest")]
pub use self::__ASAuthorizationAppleIDRequest::ASAuthorizationAppleIDRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationController")]
pub use self::__ASAuthorizationController::ASAuthorizationController;
pub use self::__ASAuthorizationController::ASAuthorizationControllerDelegate;
pub use self::__ASAuthorizationController::ASAuthorizationControllerPresentationContextProviding;
pub use self::__ASAuthorizationController::ASAuthorizationControllerRequestOptionPreferImmediatelyAvailableCredentials;
pub use self::__ASAuthorizationController::ASAuthorizationControllerRequestOptions;
pub use self::__ASAuthorizationCredential::ASAuthorizationCredential;
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethod;
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethodOther;
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethodRestorePurchase;
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethodVideoSubscriberAccount;
pub use self::__ASAuthorizationError::ASAuthorizationError;
pub use self::__ASAuthorizationError::ASAuthorizationErrorDomain;
pub use self::__ASAuthorizationError::{
    ASAuthorizationErrorCanceled, ASAuthorizationErrorFailed, ASAuthorizationErrorInvalidResponse,
    ASAuthorizationErrorNotHandled, ASAuthorizationErrorNotInteractive,
    ASAuthorizationErrorUnknown,
};
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOpenIDOperation;
#[cfg(feature = "AuthenticationServices_ASAuthorizationOpenIDRequest")]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOpenIDRequest;
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationImplicit;
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationLogin;
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationLogout;
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationRefresh;
#[cfg(feature = "AuthenticationServices_ASAuthorizationPasswordProvider")]
pub use self::__ASAuthorizationPasswordProvider::ASAuthorizationPasswordProvider;
#[cfg(feature = "AuthenticationServices_ASAuthorizationPasswordRequest")]
pub use self::__ASAuthorizationPasswordRequest::ASAuthorizationPasswordRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationPlatformPublicKeyCredentialAssertion")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialAssertion::ASAuthorizationPlatformPublicKeyCredentialAssertion;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPlatformPublicKeyCredentialAssertionRequest"
)]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialAssertionRequest::ASAuthorizationPlatformPublicKeyCredentialAssertionRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationPlatformPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialDescriptor::ASAuthorizationPlatformPublicKeyCredentialDescriptor;
#[cfg(feature = "AuthenticationServices_ASAuthorizationPlatformPublicKeyCredentialProvider")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialProvider::ASAuthorizationPlatformPublicKeyCredentialProvider;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPlatformPublicKeyCredentialRegistration"
)]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialRegistration::ASAuthorizationPlatformPublicKeyCredentialRegistration;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest"
)]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest::ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest;
pub use self::__ASAuthorizationProvider::ASAuthorizationProvider;
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderAuthorizationOperation;
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderAuthorizationOperationConfigurationRemoved;
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderAuthorizationOperationDirectRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationProviderExtensionAuthorizationRequest")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderExtensionAuthorizationRequest;
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderExtensionAuthorizationRequestHandler;
#[cfg(feature = "AuthenticationServices_ASAuthorizationProviderExtensionAuthorizationResult")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationResult::ASAuthorizationProviderExtensionAuthorizationResult;
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionFederationType;
#[cfg(feature = "AuthenticationServices_ASAuthorizationProviderExtensionKerberosMapping")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionKerberosMapping;
#[cfg(feature = "AuthenticationServices_ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionLoginConfiguration;
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::{
    ASAuthorizationProviderExtensionFederationTypeDynamicWSTrust,
    ASAuthorizationProviderExtensionFederationTypeNone,
    ASAuthorizationProviderExtensionFederationTypeWSTrust,
};
pub use self::__ASAuthorizationProviderExtensionLoginManager::ASAuthorizationProviderExtensionKeyType;
#[cfg(feature = "AuthenticationServices_ASAuthorizationProviderExtensionLoginManager")]
pub use self::__ASAuthorizationProviderExtensionLoginManager::ASAuthorizationProviderExtensionLoginManager;
pub use self::__ASAuthorizationProviderExtensionLoginManager::{
    ASAuthorizationProviderExtensionKeyTypeCurrentDeviceEncryption,
    ASAuthorizationProviderExtensionKeyTypeCurrentDeviceSigning,
    ASAuthorizationProviderExtensionKeyTypeSharedDeviceEncryption,
    ASAuthorizationProviderExtensionKeyTypeSharedDeviceSigning,
    ASAuthorizationProviderExtensionKeyTypeUserDeviceEncryption,
    ASAuthorizationProviderExtensionKeyTypeUserDeviceSigning,
    ASAuthorizationProviderExtensionKeyTypeUserSecureEnclaveKey,
    ASAuthorizationProviderExtensionKeyTypeUserSmartCard,
};
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionAuthenticationMethod;
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionPlatformSSOProtocolVersion;
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionRegistrationHandler;
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionRegistrationResult;
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionRequestOptions;
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionSupportedGrantTypes;
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::{
    ASAuthorizationProviderExtensionAuthenticationMethodPassword,
    ASAuthorizationProviderExtensionAuthenticationMethodSmartCard,
    ASAuthorizationProviderExtensionAuthenticationMethodUserSecureEnclaveKey,
};
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::{
    ASAuthorizationProviderExtensionPlatformSSOProtocolVersion1_0,
    ASAuthorizationProviderExtensionPlatformSSOProtocolVersion2_0,
};
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::{
    ASAuthorizationProviderExtensionRegistrationResultFailed,
    ASAuthorizationProviderExtensionRegistrationResultFailedNoRetry,
    ASAuthorizationProviderExtensionRegistrationResultSuccess,
    ASAuthorizationProviderExtensionRegistrationResultUserInterfaceRequired,
};
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::{
    ASAuthorizationProviderExtensionRequestOptionsNone,
    ASAuthorizationProviderExtensionRequestOptionsRegistrationDeviceKeyMigration,
    ASAuthorizationProviderExtensionRequestOptionsRegistrationRepair,
    ASAuthorizationProviderExtensionRequestOptionsRegistrationSharedDeviceKeys,
    ASAuthorizationProviderExtensionRequestOptionsUserInteractionEnabled,
};
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::{
    ASAuthorizationProviderExtensionSupportedGrantTypesJWTBearer,
    ASAuthorizationProviderExtensionSupportedGrantTypesNone,
    ASAuthorizationProviderExtensionSupportedGrantTypesPassword,
    ASAuthorizationProviderExtensionSupportedGrantTypesSAML1_1,
    ASAuthorizationProviderExtensionSupportedGrantTypesSAML2_0,
};
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationProviderExtensionUserLoginConfiguration"
)]
pub use self::__ASAuthorizationProviderExtensionUserLoginConfiguration::ASAuthorizationProviderExtensionUserLoginConfiguration;
pub use self::__ASAuthorizationPublicKeyCredentialAssertion::ASAuthorizationPublicKeyCredentialAssertion;
pub use self::__ASAuthorizationPublicKeyCredentialAssertionRequest::ASAuthorizationPublicKeyCredentialAssertionRequest;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttachment;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKind;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindDirect;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindEnterprise;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindIndirect;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindNone;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreference;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreferenceDiscouraged;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreferenceRequired;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreference;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreferenceDiscouraged;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreferencePreferred;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreferenceRequired;
pub use self::__ASAuthorizationPublicKeyCredentialConstants::{
    ASAuthorizationPublicKeyCredentialAttachmentCrossPlatform,
    ASAuthorizationPublicKeyCredentialAttachmentPlatform,
};
pub use self::__ASAuthorizationPublicKeyCredentialDescriptor::ASAuthorizationPublicKeyCredentialDescriptor;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput"
)]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput::ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput;
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput::ASAuthorizationPublicKeyCredentialLargeBlobAssertionOperation;
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput::{
    ASAuthorizationPublicKeyCredentialLargeBlobAssertionOperationRead,
    ASAuthorizationPublicKeyCredentialLargeBlobAssertionOperationWrite,
};
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput"
)]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput::ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput"
)]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput::ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput::ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement;
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput::{
    ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirementPreferred,
    ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirementRequired,
};
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput"
)]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput::ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput;
#[cfg(feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialParameters")]
pub use self::__ASAuthorizationPublicKeyCredentialParameters::ASAuthorizationPublicKeyCredentialParameters;
pub use self::__ASAuthorizationPublicKeyCredentialRegistration::ASAuthorizationPublicKeyCredentialRegistration;
pub use self::__ASAuthorizationPublicKeyCredentialRegistrationRequest::ASAuthorizationPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationRequest")]
pub use self::__ASAuthorizationRequest::ASAuthorizationRequest;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialAssertion"
)]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialAssertion::ASAuthorizationSecurityKeyPublicKeyCredentialAssertion;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest"
)]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest::ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest;
#[cfg(feature = "Foundation_NSArray")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor"
)]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport;
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportBluetooth;
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportNFC;
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportUSB;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialProvider"
)]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialProvider::ASAuthorizationSecurityKeyPublicKeyCredentialProvider;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialRegistration"
)]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialRegistration::ASAuthorizationSecurityKeyPublicKeyCredentialRegistration;
#[cfg(
    feature = "AuthenticationServices_ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest"
)]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest::ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationSingleSignOnCredential")]
pub use self::__ASAuthorizationSingleSignOnCredential::ASAuthorizationSingleSignOnCredential;
#[cfg(feature = "AuthenticationServices_ASAuthorizationSingleSignOnProvider")]
pub use self::__ASAuthorizationSingleSignOnProvider::ASAuthorizationSingleSignOnProvider;
#[cfg(feature = "AuthenticationServices_ASAuthorizationSingleSignOnRequest")]
pub use self::__ASAuthorizationSingleSignOnRequest::ASAuthorizationSingleSignOnRequest;
pub use self::__ASAuthorizationWebBrowserExternallyAuthenticatableRequest::ASAuthorizationWebBrowserExternallyAuthenticatableRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationWebBrowserPlatformPublicKeyCredential")]
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredential::ASAuthorizationWebBrowserPlatformPublicKeyCredential;
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest::ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest;
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider::ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider;
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest::ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "AuthenticationServices_ASAuthorizationWebBrowserPublicKeyCredentialManager")]
pub use self::__ASAuthorizationWebBrowserPublicKeyCredentialManager::ASAuthorizationWebBrowserPublicKeyCredentialManager;
pub use self::__ASAuthorizationWebBrowserPublicKeyCredentialManager::ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState;
pub use self::__ASAuthorizationWebBrowserPublicKeyCredentialManager::{
    ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateAuthorized,
    ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateDenied,
    ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateNotDetermined,
};
pub use self::__ASCOSEConstants::ASCOSEAlgorithmIdentifier;
pub use self::__ASCOSEConstants::ASCOSEAlgorithmIdentifierES256;
pub use self::__ASCOSEConstants::ASCOSEEllipticCurveIdentifier;
pub use self::__ASCOSEConstants::ASCOSEEllipticCurveIdentifierP256;
pub use self::__ASCredentialIdentity::ASCredentialIdentity;
#[cfg(feature = "AuthenticationServices_ASCredentialIdentityStore")]
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityStore;
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityStoreErrorCode;
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityStoreErrorDomain;
pub use self::__ASCredentialIdentityStore::{
    ASCredentialIdentityStoreErrorCodeInternalError, ASCredentialIdentityStoreErrorCodeStoreBusy,
    ASCredentialIdentityStoreErrorCodeStoreDisabled,
};
#[cfg(feature = "AuthenticationServices_ASCredentialIdentityStoreState")]
pub use self::__ASCredentialIdentityStoreState::ASCredentialIdentityStoreState;
#[cfg(feature = "AuthenticationServices_ASCredentialProviderExtensionContext")]
pub use self::__ASCredentialProviderExtensionContext::ASCredentialProviderExtensionContext;
pub use self::__ASCredentialRequest::ASCredentialRequest;
pub use self::__ASCredentialRequest::ASCredentialRequestType;
pub use self::__ASCredentialRequest::{
    ASCredentialRequestTypePasskeyAssertion, ASCredentialRequestTypePassword,
};
#[cfg(feature = "AuthenticationServices_ASCredentialServiceIdentifier")]
pub use self::__ASCredentialServiceIdentifier::ASCredentialServiceIdentifier;
pub use self::__ASCredentialServiceIdentifier::ASCredentialServiceIdentifierType;
pub use self::__ASCredentialServiceIdentifier::{
    ASCredentialServiceIdentifierTypeDomain, ASCredentialServiceIdentifierTypeURL,
};
pub use self::__ASExtensionErrors::ASExtensionErrorCode;
pub use self::__ASExtensionErrors::ASExtensionErrorDomain;
pub use self::__ASExtensionErrors::ASExtensionLocalizedFailureReasonErrorKey;
pub use self::__ASExtensionErrors::{
    ASExtensionErrorCodeCredentialIdentityNotFound, ASExtensionErrorCodeFailed,
    ASExtensionErrorCodeUserCanceled, ASExtensionErrorCodeUserInteractionRequired,
};
#[cfg(feature = "AuthenticationServices_ASPasskeyAssertionCredential")]
pub use self::__ASPasskeyAssertionCredential::ASPasskeyAssertionCredential;
#[cfg(feature = "AuthenticationServices_ASPasskeyCredentialIdentity")]
pub use self::__ASPasskeyCredentialIdentity::ASPasskeyCredentialIdentity;
#[cfg(feature = "AuthenticationServices_ASPasskeyCredentialRequest")]
pub use self::__ASPasskeyCredentialRequest::ASPasskeyCredentialRequest;
#[cfg(feature = "AuthenticationServices_ASPasskeyCredentialRequestParameters")]
pub use self::__ASPasskeyCredentialRequestParameters::ASPasskeyCredentialRequestParameters;
#[cfg(feature = "AuthenticationServices_ASPasskeyRegistrationCredential")]
pub use self::__ASPasskeyRegistrationCredential::ASPasskeyRegistrationCredential;
#[cfg(feature = "AuthenticationServices_ASPasswordCredential")]
pub use self::__ASPasswordCredential::ASPasswordCredential;
#[cfg(feature = "AuthenticationServices_ASPasswordCredentialIdentity")]
pub use self::__ASPasswordCredentialIdentity::ASPasswordCredentialIdentity;
#[cfg(feature = "AuthenticationServices_ASPasswordCredentialRequest")]
pub use self::__ASPasswordCredentialRequest::ASPasswordCredentialRequest;
pub use self::__ASPublicKeyCredential::ASPublicKeyCredential;
#[cfg(feature = "AuthenticationServices_ASPublicKeyCredentialClientData")]
pub use self::__ASPublicKeyCredentialClientData::ASPublicKeyCredentialClientData;
pub use self::__ASPublicKeyCredentialClientData::ASPublicKeyCredentialClientDataCrossOriginValue;
pub use self::__ASPublicKeyCredentialClientData::{
    ASPublicKeyCredentialClientDataCrossOriginValueCrossOrigin,
    ASPublicKeyCredentialClientDataCrossOriginValueNotSet,
    ASPublicKeyCredentialClientDataCrossOriginValueSameOriginWithAncestors,
};
#[cfg(feature = "AuthenticationServices_ASSettingsHelper")]
pub use self::__ASSettingsHelper::ASSettingsHelper;
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationPresentationContextProviding;
#[cfg(feature = "AuthenticationServices_ASWebAuthenticationSession")]
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSession;
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSessionCompletionHandler;
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSessionErrorCode;
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSessionErrorDomain;
pub use self::__ASWebAuthenticationSession::{
    ASWebAuthenticationSessionErrorCodeCanceledLogin,
    ASWebAuthenticationSessionErrorCodePresentationContextInvalid,
    ASWebAuthenticationSessionErrorCodePresentationContextNotProvided,
};
#[cfg(feature = "AuthenticationServices_ASWebAuthenticationSessionRequest")]
pub use self::__ASWebAuthenticationSessionRequest::ASWebAuthenticationSessionRequest;
pub use self::__ASWebAuthenticationSessionRequest::ASWebAuthenticationSessionRequestDelegate;
pub use self::__ASWebAuthenticationSessionWebBrowserSessionHandling::ASWebAuthenticationSessionWebBrowserSessionHandling;
#[cfg(feature = "AuthenticationServices_ASWebAuthenticationSessionWebBrowserSessionManager")]
pub use self::__ASWebAuthenticationSessionWebBrowserSessionManager::ASWebAuthenticationSessionWebBrowserSessionManager;
