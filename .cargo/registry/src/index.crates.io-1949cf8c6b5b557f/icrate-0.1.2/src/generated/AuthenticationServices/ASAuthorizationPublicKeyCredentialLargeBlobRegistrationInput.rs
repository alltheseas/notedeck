//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::AppKit::*;
use crate::AuthenticationServices::*;
use crate::Foundation::*;

ns_enum!(
    #[underlying(NSInteger)]
    pub enum ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement {
        ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirementRequired = 0,
        ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirementPreferred = 1,
    }
);

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(
        feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput"
    )]
    pub struct ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;

    #[cfg(
        feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput"
    )]
    unsafe impl ClassType for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

#[cfg(
    feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput"
)]
unsafe impl NSObjectProtocol for ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput {}

extern_methods!(
    #[cfg(
        feature = "AuthenticationServices_ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput"
    )]
    unsafe impl ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput {
        #[method_id(@__retain_semantics Init initWithSupportRequirement:)]
        pub unsafe fn initWithSupportRequirement(
            this: Allocated<Self>,
            requirement: ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement,
        ) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;

        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method(supportRequirement)]
        pub unsafe fn supportRequirement(
            &self,
        ) -> ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement;

        #[method(setSupportRequirement:)]
        pub unsafe fn setSupportRequirement(
            &self,
            support_requirement: ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement,
        );
    }
);
