// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

//! # Bindings to the `CoreWLAN` framework

#[cfg_attr(feature = "apple", link(name = "CoreWLAN", kind = "framework"))]
extern "C" {}

#[path = "CWChannel.rs"]
mod __CWChannel;
#[path = "CWConfiguration.rs"]
mod __CWConfiguration;
#[path = "CWInterface.rs"]
mod __CWInterface;
#[path = "CWNetwork.rs"]
mod __CWNetwork;
#[path = "CWNetworkProfile.rs"]
mod __CWNetworkProfile;
#[path = "CWWiFiClient.rs"]
mod __CWWiFiClient;
#[path = "CoreWLANConstants.rs"]
mod __CoreWLANConstants;
#[path = "CoreWLANTypes.rs"]
mod __CoreWLANTypes;
#[path = "CoreWLANUtil.rs"]
mod __CoreWLANUtil;

#[cfg(feature = "CoreWLAN_CWChannel")]
pub use self::__CWChannel::CWChannel;
#[cfg(feature = "CoreWLAN_CWConfiguration")]
pub use self::__CWConfiguration::CWConfiguration;
#[cfg(feature = "CoreWLAN_CWMutableConfiguration")]
pub use self::__CWConfiguration::CWMutableConfiguration;
#[cfg(feature = "CoreWLAN_CWInterface")]
pub use self::__CWInterface::CWInterface;
#[cfg(feature = "CoreWLAN_CWNetwork")]
pub use self::__CWNetwork::CWNetwork;
#[cfg(feature = "CoreWLAN_CWMutableNetworkProfile")]
pub use self::__CWNetworkProfile::CWMutableNetworkProfile;
#[cfg(feature = "CoreWLAN_CWNetworkProfile")]
pub use self::__CWNetworkProfile::CWNetworkProfile;
pub use self::__CWWiFiClient::CWEventDelegate;
#[cfg(feature = "CoreWLAN_CWWiFiClient")]
pub use self::__CWWiFiClient::CWWiFiClient;
pub use self::__CoreWLANConstants::CWBSSIDDidChangeNotification;
pub use self::__CoreWLANConstants::CWCountryCodeDidChangeNotification;
pub use self::__CoreWLANConstants::CWErrorDomain;
pub use self::__CoreWLANConstants::CWLinkDidChangeNotification;
pub use self::__CoreWLANConstants::CWLinkQualityDidChangeNotification;
pub use self::__CoreWLANConstants::CWLinkQualityNotificationRSSIKey;
pub use self::__CoreWLANConstants::CWLinkQualityNotificationTransmitRateKey;
pub use self::__CoreWLANConstants::CWModeDidChangeNotification;
pub use self::__CoreWLANConstants::CWPowerDidChangeNotification;
pub use self::__CoreWLANConstants::CWSSIDDidChangeNotification;
pub use self::__CoreWLANConstants::CWScanCacheDidUpdateNotification;
pub use self::__CoreWLANTypes::CWChannelBand;
pub use self::__CoreWLANTypes::CWChannelWidth;
pub use self::__CoreWLANTypes::CWCipherKeyFlags;
pub use self::__CoreWLANTypes::CWErr;
pub use self::__CoreWLANTypes::CWEventType;
pub use self::__CoreWLANTypes::CWIBSSModeSecurity;
pub use self::__CoreWLANTypes::CWInterfaceMode;
pub use self::__CoreWLANTypes::CWKeychainDomain;
pub use self::__CoreWLANTypes::CWPHYMode;
pub use self::__CoreWLANTypes::CWSecurity;
pub use self::__CoreWLANTypes::{
    kCWAPFullErr, kCWAssociationDeniedErr, kCWAuthenticationAlgorithmUnsupportedErr,
    kCWChallengeFailureErr, kCWCipherSuiteRejectedErr, kCWDSSSOFDMUnsupportedErr, kCWEAPOLErr,
    kCWErr, kCWHTFeaturesNotSupportedErr, kCWIPCFailureErr, kCWInvalidAKMPErr,
    kCWInvalidAuthenticationSequenceNumberErr, kCWInvalidFormatErr, kCWInvalidGroupCipherErr,
    kCWInvalidInformationElementErr, kCWInvalidPMKErr, kCWInvalidPairwiseCipherErr,
    kCWInvalidParameterErr, kCWInvalidRSNCapabilitiesErr, kCWNoErr, kCWNoMemoryErr,
    kCWNotSupportedErr, kCWOperationNotPermittedErr, kCWPCOTransitionTimeNotSupportedErr,
    kCWReassociationDeniedErr, kCWReferenceNotBoundErr, kCWShortSlotUnsupportedErr,
    kCWSupplicantTimeoutErr, kCWTimeoutErr, kCWUnknownErr, kCWUnspecifiedFailureErr,
    kCWUnsupportedCapabilitiesErr, kCWUnsupportedRSNVersionErr, kCWUnsupportedRateSetErr,
};
pub use self::__CoreWLANTypes::{
    kCWChannelBand2GHz, kCWChannelBand5GHz, kCWChannelBand6GHz, kCWChannelBandUnknown,
};
pub use self::__CoreWLANTypes::{
    kCWChannelWidth160MHz, kCWChannelWidth20MHz, kCWChannelWidth40MHz, kCWChannelWidth80MHz,
    kCWChannelWidthUnknown,
};
pub use self::__CoreWLANTypes::{
    kCWCipherKeyFlagsMulticast, kCWCipherKeyFlagsNone, kCWCipherKeyFlagsRx, kCWCipherKeyFlagsTx,
    kCWCipherKeyFlagsUnicast,
};
pub use self::__CoreWLANTypes::{
    kCWIBSSModeSecurityNone, kCWIBSSModeSecurityWEP104, kCWIBSSModeSecurityWEP40,
};
pub use self::__CoreWLANTypes::{
    kCWInterfaceModeHostAP, kCWInterfaceModeIBSS, kCWInterfaceModeNone, kCWInterfaceModeStation,
};
pub use self::__CoreWLANTypes::{
    kCWKeychainDomainNone, kCWKeychainDomainSystem, kCWKeychainDomainUser,
};
pub use self::__CoreWLANTypes::{
    kCWPHYMode11a, kCWPHYMode11ac, kCWPHYMode11ax, kCWPHYMode11b, kCWPHYMode11g, kCWPHYMode11n,
    kCWPHYModeNone,
};
pub use self::__CoreWLANTypes::{
    kCWSecurityDynamicWEP, kCWSecurityEnterprise, kCWSecurityNone, kCWSecurityOWE,
    kCWSecurityOWETransition, kCWSecurityPersonal, kCWSecurityUnknown, kCWSecurityWEP,
    kCWSecurityWPA2Enterprise, kCWSecurityWPA2Personal, kCWSecurityWPA3Enterprise,
    kCWSecurityWPA3Personal, kCWSecurityWPA3Transition, kCWSecurityWPAEnterprise,
    kCWSecurityWPAEnterpriseMixed, kCWSecurityWPAPersonal, kCWSecurityWPAPersonalMixed,
};
pub use self::__CoreWLANTypes::{
    CWEventTypeBSSIDDidChange, CWEventTypeBtCoexStats, CWEventTypeCountryCodeDidChange,
    CWEventTypeLinkDidChange, CWEventTypeLinkQualityDidChange, CWEventTypeModeDidChange,
    CWEventTypeNone, CWEventTypePowerDidChange, CWEventTypeSSIDDidChange,
    CWEventTypeScanCacheUpdated, CWEventTypeUnknown,
};
#[cfg(all(feature = "CoreWLAN_CWNetwork", feature = "Foundation_NSSet"))]
pub use self::__CoreWLANUtil::CWMergeNetworks;
