//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use crate::common::*;
use crate::Contacts::*;
use crate::CoreLocation::*;
use crate::Foundation::*;

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    #[deprecated]
    pub struct CLBeaconIdentityConstraint;

    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    unsafe impl ClassType for CLBeaconIdentityConstraint {
        #[inherits(CLCondition, NSObject)]
        type Super = CLBeaconIdentityCondition;
        type Mutability = InteriorMutable;
    }
);

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSCoding for CLBeaconIdentityConstraint {}

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSCopying for CLBeaconIdentityConstraint {}

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSObjectProtocol for CLBeaconIdentityConstraint {}

#[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
unsafe impl NSSecureCoding for CLBeaconIdentityConstraint {}

extern_methods!(
    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    unsafe impl CLBeaconIdentityConstraint {}
);

extern_methods!(
    /// Methods declared on superclass `CLBeaconIdentityCondition`
    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    unsafe impl CLBeaconIdentityConstraint {
        #[cfg(feature = "Foundation_NSUUID")]
        #[method_id(@__retain_semantics Init initWithUUID:)]
        pub unsafe fn initWithUUID(this: Allocated<Self>, uuid: &NSUUID) -> Id<Self>;

        #[cfg(feature = "Foundation_NSUUID")]
        #[method_id(@__retain_semantics Init initWithUUID:major:)]
        pub unsafe fn initWithUUID_major(
            this: Allocated<Self>,
            uuid: &NSUUID,
            major: CLBeaconMajorValue,
        ) -> Id<Self>;

        #[cfg(feature = "Foundation_NSUUID")]
        #[method_id(@__retain_semantics Init initWithUUID:major:minor:)]
        pub unsafe fn initWithUUID_major_minor(
            this: Allocated<Self>,
            uuid: &NSUUID,
            major: CLBeaconMajorValue,
            minor: CLBeaconMinorValue,
        ) -> Id<Self>;
    }
);

extern_methods!(
    /// Methods declared on superclass `CLCondition`
    #[cfg(feature = "CoreLocation_CLBeaconIdentityConstraint")]
    unsafe impl CLBeaconIdentityConstraint {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Id<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Id<Self>;
    }
);
